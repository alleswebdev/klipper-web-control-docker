################################################################################
# Board: MKS Robin Nano 1.1 (Flying Bear Reborn 2.0)
# Printer: Flying Bear Ghost 4S / Ghost 5 / Reborn
# G-code Macros by ODUCCEU
################################################################################

# Print Job Management #########################################################

[gcode_macro START_PRINT]
# PrusaSliser: START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Cura: START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240) %}
    {% set BED_TEMP = params.BED_TEMP|default(70) %}

    CLEAR_PAUSE
    M220 S100                                                                   # reset feedrate
    M221 S100                                                                   # reset flowrate
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}                  # set bed t℃
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.BED_TEMP|float * 0.75}   # wait until bed is partially heated
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}               # set nozzle t℃
    G90                                                                         # absolute positioning
    M82                                                                         # absolute extruder mode
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}                       # wait until
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}                    # wait until
    G28                                                                         # home
    G92 E0                                                                      # reset extruder

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91                                                                         # relative positioning
    G1 X-2 Y-2 E-5 F300                                                         # wipe
    G90                                                                         # absolute positioning
    PARK                                                                        # run macro
    M84                                                                         # turn off all motors

[gcode_macro M76]                                                               # Marlin Compatibility
gcode:
    PAUSE

[gcode_macro G27]                                                               # Marlin Compatibility
gcode:
    PARK

[gcode_macro M125]                                                              # Marlin Compatibility
gcode:
    PARK

[gcode_macro PARK]
gcode:
    {% set X = params.X|default(10) %}
    {% set Y = params.Y|default(10) %}
    {% set Z = params.Z|default(10) %}

    {% set x_max = printer.toolhead.axis_maximum.x|float %}
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% if X|float < x_max %}
        {% set x_park = X|float %}
    {% else %}
        {% set x_park = x_max %}
    {% endif %}
    {% if Y|float < y_max %}
        {% set y_park = Y|float %}
    {% else %}
        {% set y_park = y_max %}
    {% endif %}
    {% set z_current = printer.toolhead.position.z|float %}
    {% if (z_current + Z|float ) < z_max %}
        {% set z_park = z_current + Z|float %}
    {% else %}
        {% set z_park = z_max %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK_STATE
    G90                                                                         # absolute positioning
    G1 Z{z_park} F1500
    G1 X{x_park} Y{y_park} F6000
    RESTORE_GCODE_STATE name=PARK_STATE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_retract: 1.5
gcode:
    {% set E = printer["gcode_macro PAUSE"].retract|float %}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    G91
    G1 E-{E} F2100                                                              # retract
    G90
    PARK

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro PAUSE"].retract|float %}                    # get E from PAUSE macro
    G91
    G1 E{E} F2100                                                               # unretract
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    PARK
    
# Wipe the nozzle #####################

[gcode_macro PRIME_LINE]
# Overcomplicated version that calculates the extrusion volume both cubic and cylindrical
# Draws a line along X (or Y if used with parameter 'Y')
# PrusaSliser: PRIME_LINE [F={first_layer_speed}] [Y]
# Cura: PRIME_LINE [F={speed_print_layer_0}] [Y]                                                     # line length
# Line height = ~3/4 nozzle diameter
# Line Cubic Volume = length * width * height = length * nozzle_diameter * height
# Filament Cylindrical Volume = E * π * R^2 = E * 3.14 * (1.75 / 2)^2 = E * 2.4
# Line Volume = Filament volume => E = length * width * height / 2.4
gcode: 
    {% set F = params.F|default(20) %}
    {% set L = params.L|default(120) %}

    {% if 'Y' in params %}
        {% set length_max = ( printer.toolhead.axis_maximum.y|float - 10.0 ) %}
    {% else %}
        {% set length_max = ( printer.toolhead.axis_maximum.x|float - 10.0 ) %}
    {% endif %}
    {% if L|float <= length_max %}
        {% set length = L|float %}
    {% else %}
        {% set length = length_max %}
    {% endif %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    {% set extrude = 1.5 * length * width * height / 2.4 %}
    {% set feedrate = F|float * 60 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    SET_IDLE_TIMEOUT TIMEOUT=7200
    {% if 'Y' in params %}
        {% set x_start = 5.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - length) / 2 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 Y{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 X{width} F5000                                                       # move to the next line
        G1 Y-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - length) / 2 %}
        {% set y_start = 5.0 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 X{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 Y{width} F5000                                                       # move to the next line
        G1 X-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE

# Beeper #######################################################################

[gcode_macro M300]                                                              # Marlin Compatibility
gcode:
    BEEP

[gcode_macro BEEP]
gcode:
   {% set S = params.S|default(1000) %}
   {% set P = params.P|default(100) %}

    SET_PIN PIN=BEEPER_pin VALUE={S}
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

# Filament Change ##############################################################

[gcode_macro M600]                                                              # Marlin Compatibility
gcode:
    CHANGE_FILAMENT

[gcode_macro CHANGE_FILAMENT]
# Unloads filament, waites 5 minutes for manual filament switch and loads again
gcode:
    {% set TIMER = params.TIMER|default(300) %}
    {% set U = params.U|default(100) %}
    {% set L = params.L|default(100) %}

    SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_STATE
    {% if printer.pause_resume.is_paused %}
        {action_respond_info("Already paused")}    
    {% elif printer.toolhead.homed_axes != "xyz" %}
        G28                                                                     # home if not homed
    {% else %}
        PAUSE
        SET_IDLE_TIMEOUT TIMEOUT=7200
    {% endif %}
    UNLOAD_FILAMENT U={U}
    BEEP
    COUNTDOWN TIME={TIMER} MSG="Change filament! Time left: "
    BEEP
    LOAD_FILAMENT L={L}
    RESUME
    RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_STATE

[gcode_macro M701]                                                              # Marlin Compatibility
gcode:
    LOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]                                                    # set
gcode:
    {% set T = params.T|default(240) %}
    {% set L = params.L|default(100) %}
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT_STATE
    LOW_TEMP_CHECK TEMP={T}
    M83                                                                         # relative extrusion
    G1 E{ L|float * 0.5 } F1500                                                 # extrude fast
    G4 P1000                                                                    # wait 1 second
    G1 E{ L|float * 0.5 } F200                                                  # extrude slow
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_STATE

[gcode_macro M702]                                                              # Marlin Compatibility
gcode:
    UNLOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]                                                   # set
gcode:
    {% set U = params.U|default(100) %}
    {% set T = params.T|default(180) %}
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_STATE
    LOW_TEMP_CHECK TEMP={T}
    M83                                                                         # relative extrusion
    G1 E2  F200                                                                 # extrude a little
    G1 E-10  F200                                                               # retract a little
    G1 E-{U} F3000                                                              # retract a lot
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_STATE

[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T = params.T|default(240) %}
    {% if printer.extruder.target != 0 %}                                       # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %}         # heat to the setpoint
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer.extruder.target|float}
            TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target|float}
        {% endif %}
    {% else %}                                                                  # if no setpoint for extruder
        {% if printer.extruder.temperature < T %}                               # heat to the target
            M118 Heating to {T}
            SET_HEATER_TEMPERATURE HEATER=extruder TARGET={T}
            TEMPERATURE_WAIT SENSOR=extruder MINIMUM={T}
        {% endif %}
    {% endif %}

[gcode_macro COUNTDOWN]
gcode: 
    {% set TIME = default(10) %}
    {% set MSG = default("TIME: ") %}
    {% for s in range(TIME|int, 0, -1) %}                                       # countdown
        G4 P1000                                                                # dwell 1 second
        M118 {params.MSG} {s}s
    {% endfor %}


# Marlin Compatibility #########################################################

[gcode_macro M92]                                                  # 400 steps
gcode:
    {% set E = params.E|default(0.0025) %}
    SET_EXTRUDER_STEP_DISTANCE DISTANCE={E}

# NOTE! Velocity settings cannot exceed the limits specified in the config file


################################################################################
